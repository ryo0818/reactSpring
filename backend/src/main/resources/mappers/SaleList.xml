<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.SaleRepository">

	<!-- SalesEntity に対応する resultMap -->
	<resultMap id="SalesEntityMap" type="com.example.demo.entity.SalesEntity">
		<id column="sale_id" property="saleId" />
		<result column="user_id" property="userId" />
		<result column="user_company_code" property="userCompanyCode" />
		<result column="user_team_code" property="userTeamCode" />
		<result column="client_industry" property="clientIndustry" />
		<result column="client_company_name" property="clientCompanyName" />
		<result column="client_phone_number" property="clientPhoneNumber" />
		<result column="call_date_time" property="callDateTime" />
		<result column="call_count" property="callCount" />
		<result column="status_id" property="statusId" />
		<result column="user_staff" property="userStaff" />
		<result column="remarks" property="remarks" />
		<result column="client_url" property="clientUrl" />
		<result column="client_address" property="clientAddress" />
		<result column="hotflg" property="hotflg" />
		<result column="insert_date_time" property="insertDateTime" />
		<result column="valid_flg" property="validFlg" />
	</resultMap>

	<!-- SELECT 共通句 -->
	<sql id="baseColumns">
		t.sale_id,
		t.user_id,
		t.user_company_code,
		t.user_team_code,
		t.client_industry,
		t.client_company_name,
		t.client_phone_number,
		t.call_date_time,
		t.call_count,
		s.status_name,
		t.user_staff,
		t.remarks,
		t.client_url,
		t.client_address,
		t.hotflg,
		t.insert_date_time,
		t.valid_flg
	</sql>


	<!-- IDの最大値（idが数値文字列である前提） -->
	<select id="getMaxSalesId" resultType="string">
		SELECT MAX(sale_id) FROM public.sale_info
	</select>

	<!-- 営業情報取得 -->
	<select id="getSalesSearch"
		parameterType="string"
		resultMap="SalesEntityMap">
		SELECT <include refid="baseColumns" /> 
		FROM 
			public.sale_info t
		INNER JOIN 
			public.sales_status s
			ON t.status_id = s.status_level
		WHERE 
			t.user_company_code = #{userCompanyCode} 
		ORDER BY 
			t.call_date_time DESC, t.sale_id ASC </select>

	<!-- 登録 -->
	<insert id="insertSale" parameterType="com.example.demo.entity.SalesEntity">
		INSERT INTO public.sale_info (
		sale_id,
		user_id,
		user_company_code,
		user_team_code,
		client_industry,
		client_company_name,
		client_phone_number,
		call_date_time,
		call_count,
		status_id,
		user_staff,
		remarks,
		client_url,
		client_address,
		hotflg,
		insert_date_time,
		valid_flg
		) VALUES (
		#{saleId},
		#{userId},
		#{userCompanyCode},
		#{userTeamCode},
		#{clientIndustry},
		#{clientCompanyName},
		#{clientPhoneNumber},
		#{callDateTime, jdbcType=TIMESTAMP},
		#{callCount},
		#{statusId},
		#{userStaff},
		#{remarks},
		#{clientUrl},
		#{clientAddress},
		#{hotflg, jdbcType=BOOLEAN},
		#{insertDateTime, jdbcType=TIMESTAMP},
		#{validFlg, jdbcType=BOOLEAN}
		)
	</insert>

	<!-- 複数件更新（ID一致） -->
	<update id="updateSaleBySaleId" parameterType="java.util.List"> UPDATE
		public.sale_info AS t SET user_id = v.user_id, user_company_code =
		v.user_company_code, user_team_code = v.user_team_code, client_industry
		= v.client_industry, client_company_name = v.client_company_name,
		client_phone_number = v.client_phone_number, call_date_time =
		v.call_date_time, call_count = v.call_count, status_id =
		v.status_id, user_staff = v.user_staff, remarks = v.remarks,
		client_url = v.client_url, client_address = v.client_address, hotflg =
		v.hotflg, insert_date_time = v.insert_date_time, valid_flg = v.valid_flg
		FROM ( VALUES <foreach collection="list" item="s" separator=",">
			(
			#{s.saleId},
			#{s.userId},
			#{s.userCompanyCode},
			#{s.userTeamCode},
			#{s.clientIndustry},
			#{s.clientCompanyName},
			#{s.clientPhoneNumber},
			#{s.callDateTime, jdbcType=TIMESTAMP},
			#{s.callCount},
			#{s.statusId},
			#{s.userStaff},
			#{s.remarks},
			#{s.clientUrl},
			#{s.clientAddress},
			#{s.hotflg, jdbcType=BOOLEAN},
			#{s.insertDateTime, jdbcType=TIMESTAMP},
			#{s.validFlg, jdbcType=BOOLEAN}
			)
		</foreach>
		) AS v( sale_id, user_id, user_company_code, user_team_code,
		client_industry, client_company_name, client_phone_number,
		call_date_time, call_count, status_id, user_staff, remarks,
		client_url, client_address, hotflg, insert_date_time, valid_flg ) WHERE
		t.sale_id = v.sale_id </update>


	<!-- 削除（論理削除なら valid_flg を更新） -->
	<delete id="deleteSaleById" parameterType="string">
		DELETE FROM public.sale_info WHERE sale_id = #{saleId}
	</delete>
	
	<insert id="insertSalesList" parameterType="java.util.List">
    INSERT INTO public.sale_info (
        sale_id,
        user_id,
        user_company_code,
        user_team_code,
        client_industry,
        client_company_name,
        client_phone_number,
        call_date_time,
        call_count,
        status_id,
        user_staff,
        remarks,
        client_url,
        client_address,
        hotflg,
        insert_date_time,
        valid_flg
    ) VALUES
    <foreach collection="list" item="item" separator=",">
        (
            #{item.saleId},
            #{item.userId},
            #{item.userCompanyCode},
            #{item.userTeamCode},
            #{item.clientIndustry},
            #{item.clientCompanyName},
            #{item.clientPhoneNumber},
            #{item.callDateTime, jdbcType=TIMESTAMP},
            #{item.callCount},
            #{item.statusId},
            #{item.userStaff},
            #{item.remarks},
            #{item.clientUrl},
            #{item.clientAddress},
            #{item.hotflg, jdbcType=BOOLEAN},
            #{item.insertDateTime, jdbcType=TIMESTAMP},
            #{item.validFlg, jdbcType=BOOLEAN}
        )
    </foreach>
</insert>


</mapper>
